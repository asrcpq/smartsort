#!/usr/bin/env python3
import sys

def keymap(x):
	x = x[0]
	if type(x) is str:
		if x == ' ':
			return 'bd'
		if x == '/':
			return 'bm'
		if x == '_':
			return 'bn'
		return 'n' + x
	if type(x) is int:
		# huge number is still treated like string
		return 'd' + str(x).zfill(10)
	print(x, type(x), "cannot be handled")
	sys.exit(1)

data = []
result = []
idx = []
for ln, line in enumerate(sys.stdin):
	data.append(line.strip())
	result.append(ln)
	idx.append(0)
result = [result]
finish = False
while not finish:
	finish = True
	new_result = []
	for block in result:
		if len(block) == 1:
			new_result.append(block)
			continue
		finish = False

		keypair = {}
		# max len strings push first, others push after loop
		for ind in block:
			if len(data[ind]) <= idx[ind]:
				new_result.append([ind])
			elif data[ind][idx[ind]].isdecimal():
				tmpnum = 0
				while data[ind][idx[ind]].isdecimal():
					tmpnum *= 10
					tmpnum += int(data[ind][idx[ind]])
					idx[ind] += 1
					if len(data[ind]) <= idx[ind]:
						break
				keypair.setdefault(tmpnum, [])
				keypair[tmpnum].append(ind)
			else:
				keypair.setdefault(data[ind][idx[ind]], [])
				keypair[data[ind][idx[ind]]].append(ind)
				idx[ind] += 1
		for key, value in sorted(keypair.items(), key = lambda x: keymap(x)):
			new_result.append(value)
	result = new_result

for block in result:
	print(data[block[0]])
